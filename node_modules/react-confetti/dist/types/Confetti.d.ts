import { IRect } from './Rect';
import ParticleGenerator from './ParticleGenerator';
export interface IConfettiOptions {
    width: number;
    height: number;
    numberOfPieces: number;
    friction: number;
    wind: number;
    gravity: number;
    colors: string[];
    opacity: number;
    recycle: boolean;
    run: boolean;
    debug: boolean;
    confettiSource: IRect;
    tweenFunction: (currentTime: number, currentValue: number, targetValue: number, duration: number, s?: number) => number;
    tweenDuration: number;
    drawShape?: (context: CanvasRenderingContext2D) => void;
}
export declare const confettiDefaults: Pick<IConfettiOptions, Exclude<keyof IConfettiOptions, 'confettiSource'>>;
export default class Confetti {
    constructor(canvas: HTMLCanvasElement, opts: Partial<IConfettiOptions>);
    canvas: HTMLCanvasElement;
    context: CanvasRenderingContext2D;
    _options: IConfettiOptions;
    generator: ParticleGenerator;
    options: Partial<IConfettiOptions>;
    setOptionsWithDefaults: (opts: Partial<IConfettiOptions>) => void;
    update: () => void;
}
